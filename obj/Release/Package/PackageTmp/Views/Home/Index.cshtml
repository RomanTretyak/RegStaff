@using RegStaff.Models;
@model Person
@{
    ViewBag.Title = "RegStaff";

}
@section featured {

}

<script src="~/Scripts/jquery-1.10.2.min.js" type="text/javascript"></script>
<script src="~/Scripts/i18n/grid.locale-ru.js" type="text/javascript"></script>
<link href="~/Content/themes/base/jquery.ui.all.css" rel="stylesheet" type="text/css" />
<link href="~/Content/jquery.jqGrid/ui.jqgrid_1.css" rel="stylesheet" type="text/css" />
<script src="~/Scripts/jquery-ui-1.8.11.min.js" type="text/javascript"></script>
<script src="~/Scripts/jquery.jqGrid.js" type="text/javascript"></script>

<style>
    .ui-jqgrid .ui-pg-input {
        height: 20px;
    }

    .ui-jqgrid .ui-jqgrid-pager {
        height: 50px;
    }
</style>

<table id="jqg"></table>
<div id="jpager"></div>
<script type="text/javascript">
    $(document).ready(function () {
        var lastSel;
        $("#jqg").jqGrid({
            url: '/Home/PersonData',
            datatype: "json",
            mtype: 'POST',
           // width: all,
            height: 550,
            jsonReader: {
                page: "page",
                total: "total",
                records: "records",
                root: "rows",
                repeatitems: false,
                id: ""
            },
            colNames: [ 'ФИО', 'Логин', 'Проект', 'Категория', 'ТК/ДОУ', 'Officially, UAH', 'UnOfficially, UAH',
                        'Type', 'Офис', 'Дата оформления', 'Стаж', 'SV', 'Статус', 'ИПН', 'Тренер', 'Старт обучения', 'Конец  обучения',
                       'Корректировка', 'Общий период обучения', 'Результат', 'Причина', 'Комментарии'],
            colModel: [
            /*{ name: 'Id', width: 40, key: true },*/
            { name: 'FIO', width: 150, editable: true, editrules: { required: true } },
            { name: 'Login', width: 110, editable: true, editrules: { required: true } },
            { name: 'Project', width: 120, editable: true},
            { name: 'Category', width: 120, editable: true, edittype: 'select', editoptions: { value: { 'ИС': 'ИС', 'Фахівець': 'Фахівець', 'Молодший фахівець': 'Молодший фахівець', 'Старший фахівець': 'Старший фахівець', 'Молодший керівник': 'Молодший керівник', 'Керівник': 'Керівник', 'Топ перформер': 'Топ перформер' } } },
            { name: 'CategoryType', width: 60, editable: true, edittype: 'select', editoptions: { value: { 'ТК': 'ТК', 'ДОУ': 'ДОУ' } } },
            { name: 'SalaryOfficaill', width: 100, editable: true, editrules: { number: true, minValue: 0, maxValue: 10000} },
            { name: 'SalaryNotOfficiall', width: 120, editable: true, editrules: { number: true, minValue: 0, maxValue: 10000 } },
            { name: 'SalaryType', width: 100, editable: true, edittype: 'select', editoptions: { value: { 'Ставка + премия': 'Ставка + премия', 'Ставка': 'Ставка', 'Премия': 'Премия' } } },
            { name: 'OfficeLocation', width: 80, editable: true, edittype: 'select', editoptions: { value: { 'Киев': 'Киев', 'Чернигов': 'Чернигов', 'Луцк': 'Луцк' } } },
            //{ name: 'StartWork', width: 50, editable: true, editrules: { required: true }, editoptions: { defaultValue: '2014-01-01 0:00:00' }, sorttype: 'date', datefmt: "m/d/Y h:i A" },
            { name: 'StartWork', index: 'StartWork', width: 140, align: 'center', editable: true},

            //{name: 'StartWork', index: 'StartWork', editable: true, formatter: 'date',
            //formatoptions: { srcformat: 'y-m-d', newformat: 'ShortDate' },
            //    searchoptions: { sopt: ['eq','lt','le','gt','ge'],
            //        dataInit : function (elem) { 
            //            $(elem).datepicker({ changeMonth: true, changeYear: true, 
            //                dateFormat: 'yy-mm-dd' }); 
            //        }
            //    }
            //},
            //{ name: 'StartWork', width: 80, formatter: 'date', srcformat: 'yyyy-mm-dd', newformat: 'm-d-Y', edittype: 'text', editable: true, editoptions: { dataInit: function (el) { setTimeout(function () { $(el).datepicker(); }, 200); } } },
            //{ name: 'StartWork', height: 100, index: 'date', align: 'right', sortable: false, formatter: 'date', formatoptions: { newformat: 'd/m/y' }, editable: true, editrules: { required: true }, editoptions: { readonly: 'readonly', dataInit: function (el) { $(el).datepicker(); } } },
            { name: 'WorkExperience', width: 50, editable: false},
            { name: 'SV', width: 150, editable: true },
            { name: 'Status', width: 70, editable: true, edittype: 'select', editoptions: { value: { 'работает': 'работает', 'уволен': 'уволен', 'дикрет': 'дикрет' } } },
            { name: 'IPN', width: 70, editable: true },
            { name: 'Trainer', width: 50, editable: true },
            { name: 'StartEducation', width: 50, editable: true},
            { name: 'EndEducation', width: 50, editable: true},
            { name: 'Adjustment', width: 50, editable: true },
            { name: 'DiffEducation', width: 50, editable: true },
            { name: 'Result', width: 50, editable: true },
            { name: 'Reason', width: 50, editable: true },
            { name: 'Comments', width: 50, editable: true }
            ],
            rowNum: 2000,
            viewrecords: false,
            shrinkToFit: false,
            pager: '#jpager',
            autowidth: true,
            loadonce: true,
            sortname: 'Id',
            sortorder: "asc", // порядок сортировки

            //будет treeview для каждого итема грида    !!!!!!!!!!!!!!!!!!!!!!!!!!
            //subGridOptions: { "plusicon" : "ui-icon-triangle-1-e", "minusicon" : "ui-icon-triangle-1-s", "openicon" : "ui-icon-arrowreturn-1-e",  "expandOnLoad" : true },
            //subGrid : true,
            //subGridUrl: '/Home/ProjectData',
            //subGridModel: [{ name  : ['No','Item','Qty','Unit','Line Total'], 
            //    width : [55,200,80,80,80] } 
            //],
            //caption: "Subgrid Example",

            ondblClickRow: function (rowid) { //view form on double click

                $("#jqg").jqGrid('viewGridRow', rowid, { closeOnEscape: true });
                //alert("clicj");
            },
            onSelectRow: function (id) {
                if (id && id !== lastSel) {
                    jQuery('#jqg').restoreRow(lastSel);
                    lastSel = id;
                }
                //jQuery('#jqg').editRow(id, true);
            }
            
        });
        $('#jqg').jqGrid('filterToolbar');
        $("#jqg").jqGrid('navGrid', '#jpager', {
            add: true,
            addtext: "Добавить",
            del: true,
            deltext: "Удалить",
            edit: true,
            edittext: "Редактировать",
            search: true,
            //searchtext: "Поиск",
            refresh: true,
            //refreshtext: "Обновить",
            view: true, // просмотр записи
            viewtext: "Смотреть",
            viewtitle: "Выбранная запись"
        },
          /*  
        { // edit option
            recreateForm: true,height:700,width:500,
            beforeShowForm: function (form) {
                $('#tr_Name', form).hide();
                //alert("edit");

            }
        },
          { // add option
              recreateForm: true, height: 700, width: 500,
              beforeShowForm: function (form) {
                  $('#tr_Name', form).show();
              }
          },
          */
        update("edit"), // обновление
        update("add"), // добавление
        update("del") // удаление
        
        );
        function update(act) {
            return {
                closeAfterAdd: true, // закрыть после добавления
                height: 650,
                width: 500,
                closeAfterEdit: true, // закрыть после редактирования
                reloadAfterSubmit: true, // обновление
                drag: true,
                onclickSubmit: function (params) {
                    var list = $("#jqg");
                    var selectedRow = list.getGridParam("selrow");
                    rowData = list.getRowData(selectedRow);
                    if (act === "add")
                        params.url = '@Url.Action("Create")';
                    else if (act === "del")
                        params.url = '@Url.Action("Delete")';
                    else if (act === "edit")
                        params.url = '@Url.Action("Edit")';
                },
                afterSubmit: function (response, postdata) {
                    // обновление грида
                    $(this).jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid')
                    return [true, "", 0]
                }     
            };
        };
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/lookup")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/jqgrid")
}



